import{ethers as a}from"./_snowpack/pkg/ethers.js";import d from"./artifacts/contracts/Campaign.sol/Campaign.json.proxy.js";import l from"./artifacts/contracts/Campaign.sol/CampaignFactory.json.proxy.js";import{UploadDescoIPFS as h,UploadFileToIPFS as y}from"./PinataInteractions.js";export const GetAllCompaignFuncJS=async(e,o)=>{const s=new a.providers.JsonRpcBatchProvider(o),i=new a.Contract(e,l.abi,s),r=i.filters.CampaignCreatedEvent();return(await i.queryFilter(r)).map(t=>({title:t.args.title,campaignaddress:t.args.campignAddress,category:t.args.category,descriptionhash:t.args.descHash,imghash:t.args.imgHash,amountrequired:a.utils.formatEther(t.args.requiredAmount),owner:t.args.owner,publisheddate:new Date(parseInt(t.args.timestamp)*1e3).toLocaleString()}))},GetCompaignsByCategoryIndexFuncJS=async(e,o,s)=>{const i=new a.providers.JsonRpcBatchProvider(s),r=new a.Contract(e,l.abi,i),c=r.filters.CampaignCreatedEvent(null,o);return(await r.queryFilter(c)).map(n=>({title:n.args.title,campaignaddress:n.args.campignAddress,category:n.args.category,descriptionhash:n.args.descHash,imghash:n.args.imgHash,amountrequired:a.utils.formatEther(n.args.requiredAmount),owner:n.args.owner,publisheddate:new Date(parseInt(n.args.timestamp)*1e3).toLocaleString()}))},GetUnitCompaignsByAddressFuncJS=async(e,o,s)=>{if(!(typeof o!="undefined"&&o))throw"Please provide valid campaign address";const i=new a.providers.JsonRpcBatchProvider(s),r=new a.Contract(e,l.abi,i),c=r.filters.CampaignCreatedEvent();let t=(await r.queryFilter(c)).find(p=>p.args.campignAddress==o);if(!(typeof t!="undefined"&&t))throw"Campaign Not Found!";return{title:t.args.title,campaignaddress:t.args.campignAddress,category:t.args.category,descriptionhash:t.args.descHash,imghash:t.args.imgHash,amountrequired:a.utils.formatEther(t.args.requiredAmount),owner:t.args.owner,publisheddate:new Date(parseInt(t.args.timestamp)*1e3).toLocaleString()}},GetCompaignTransactionsFuncJS=async(e,o)=>{const i=new a.providers.JsonRpcBatchProvider(o).getSigner(),r=new a.Contract(e,d.abi,i),c=r.filters.DonatedEvent();return(await r.queryFilter(c)).map(n=>({amount:a.utils.formatEther(n.args.amount),donar:n.args.donar,timestamp:new Date(parseInt(n.args.timestamp)*1e3).toLocaleString()}))},DonateFuncJS=async(e,o)=>{try{console.log(e,o);const s=new a.providers.Web3Provider(window.ethereum,"any"),i=await s.getNetwork(),r=s.getSigner();await(await new a.Contract(e,d.abi,r).DonateFunc({value:a.utils.parseUnits(o.toString(),"ether")})).wait()}catch(s){throw console.log("Error DonateFuncJS",s),JSON.parse(JSON.stringify(s)).reason}},CreateCampaignFuncJS=async(e,o,s,i)=>{let r=null;console.log("json form",e);let c=h(e.description,o,s),g=y(e.imgClassGuid,e.imgClassGuid,o,s);await Promise.all([g,c]).then(t=>{r={title:e.title,amount:e.amount,category:e.category,imageHash:t[0].pinataHASH,descHash:t[1].pinataHASH},console.log("sibmit form",r)});try{const n=new a.providers.Web3Provider(window.ethereum,"any").getSigner(),p=new a.Contract(i,l.abi,n),m=a.utils.parseEther(e.amount+""),u=await p.CreateCampaignFunc(r.title,m,r.imageHash,r.descHash,r.category);console.log("CreateCampaignFuncJS result: ",u)}catch(t){throw console.log("Error CreateCampaignFuncJS",t),JSON.parse(JSON.stringify(t)).reason}};
