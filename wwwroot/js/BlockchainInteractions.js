import{ethers as n}from"./_snowpack/pkg/ethers.js";import d from"./artifacts/contracts/Campaign.sol/Campaign.json.proxy.js";import l from"./artifacts/contracts/Campaign.sol/CampaignFactory.json.proxy.js";import{UploadDescoIPFS as w,UploadFileToIPFS as h}from"./PinataInteractions.js";export const GetAllCompaignFuncJS=async(e,o)=>{const r=new n.providers.JsonRpcBatchProvider(o),i=new n.Contract(e,l.abi,r),a=i.filters.CampaignCreatedEvent();return(await i.queryFilter(a)).map(t=>({title:t.args.title,campaignaddress:t.args.campignAddress,category:t.args.category,descriptionhash:t.args.descHash,imghash:t.args.imgHash,amountrequired:n.utils.formatEther(t.args.requiredAmount),owner:t.args.owner,publisheddate:new Date(parseInt(t.args.timestamp)*1e3).toLocaleString()}))},GetCompaignsByCategoryIndexFuncJS=async(e,o,r)=>{const i=new n.providers.JsonRpcBatchProvider(r),a=new n.Contract(e,l.abi,i),c=a.filters.CampaignCreatedEvent(null,o);return(await a.queryFilter(c)).map(s=>({title:s.args.title,campaignaddress:s.args.campignAddress,category:s.args.category,descriptionhash:s.args.descHash,imghash:s.args.imgHash,amountrequired:n.utils.formatEther(s.args.requiredAmount),owner:s.args.owner,publisheddate:new Date(parseInt(s.args.timestamp)*1e3).toLocaleString()}))},GetUnitCompaignsByAddressFuncJS=async(e,o,r)=>{if(!(typeof o!="undefined"&&o))throw"Please provide valid campaign address";const i=new n.providers.JsonRpcBatchProvider(r),a=new n.Contract(e,l.abi,i),c=a.filters.CampaignCreatedEvent();let t=(await a.queryFilter(c)).find(p=>p.args.campignAddress==o);if(!(typeof t!="undefined"&&t))throw"Campaign Not Found!";return{title:t.args.title,campaignaddress:t.args.campignAddress,category:t.args.category,descriptionhash:t.args.descHash,imghash:t.args.imgHash,amountrequired:n.utils.formatEther(t.args.requiredAmount),owner:t.args.owner,publisheddate:new Date(parseInt(t.args.timestamp)*1e3).toLocaleString()}},GetCompaignTransactionsFuncJS=async(e,o)=>{const i=new n.providers.JsonRpcBatchProvider(o).getSigner(),a=new n.Contract(e,d.abi,i),c=a.filters.DonatedEvent();return(await a.queryFilter(c)).map(s=>({amount:n.utils.formatEther(s.args.amount),donar:s.args.donar,timestamp:new Date(parseInt(s.args.timestamp)*1e3).toLocaleString()}))},DonateFuncJS=async(e,o)=>{try{console.log(e,o);const r=new n.providers.Web3Provider(window.ethereum,"any"),i=await r.getNetwork(),a=r.getSigner();await(await new n.Contract(e,d.abi,a).DonateFunc({value:n.utils.parseUnits(o.toString(),"ether")})).wait()}catch(r){throw console.log("Error DonateFuncJS",r),JSON.parse(JSON.stringify(r)).reason}},ApproveCampaignFuncJS=async e=>{try{const r=new n.providers.Web3Provider(window.ethereum,"any"),i=await r.getNetwork(),a=r.getSigner();var o=await(await new n.Contract(e,d.abi,a).ApproveFunc()).wait();console.log("Approve campaign result",o)}catch(r){throw console.log("Error ApproveCampaignFuncJS"),console.log(JSON.parse(JSON.stringify(r)).reason),JSON.parse(JSON.stringify(r)).reason}},CreateCampaignFuncJS=async(e,o,r,i)=>{let a=null;console.log("json form",e);let c=w(e.description,o,r),g=h(e.imgClassGuid,e.imgClassGuid,o,r);await Promise.all([g,c]).then(t=>{a={title:e.title,amount:e.amount,category:e.category,imageHash:t[0].pinataHASH,descHash:t[1].pinataHASH},console.log("sibmit form",a)});try{const s=new n.providers.Web3Provider(window.ethereum,"any").getSigner(),p=new n.Contract(i,l.abi,s),m=n.utils.parseEther(e.amount+""),u=await p.CreateCampaignFunc(a.title,m,a.imageHash,a.descHash,a.category);console.log("CreateCampaignFuncJS result: ",u)}catch(t){throw console.log("Error CreateCampaignFuncJS",t),JSON.parse(JSON.stringify(t)).reason}};
