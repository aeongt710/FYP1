import{ethers as r}from"./_snowpack/pkg/ethers.js";import m from"./artifacts/contracts/Campaign.sol/Campaign.json.proxy.js";import p from"./artifacts/contracts/Campaign.sol/CampaignFactory.json.proxy.js";export const GetAllCompaignFuncJS=async(e,n)=>{const a=new r.providers.JsonRpcBatchProvider(n),i=new r.Contract(e,p.abi,a),o=i.filters.CampaignCreatedEvent();return(await i.queryFilter(o)).map(t=>({title:t.args.title,campaignaddress:t.args.campignAddress,category:t.args.category,descriptionhash:t.args.descHash,imghash:t.args.imgHash,amountrequired:r.utils.formatEther(t.args.requiredAmount),owner:t.args.owner,publisheddate:new Date(parseInt(t.args.timestamp)*1e3).toLocaleString()}))},GetCompaignsByCategoryIndexFuncJS=async(e,n,a)=>{const i=new r.providers.JsonRpcBatchProvider(a),o=new r.Contract(e,p.abi,i),c=o.filters.CampaignCreatedEvent(null,n);return(await o.queryFilter(c)).map(s=>({title:s.args.title,campaignaddress:s.args.campignAddress,category:s.args.category,descriptionhash:s.args.descHash,imghash:s.args.imgHash,amountrequired:r.utils.formatEther(s.args.requiredAmount),owner:s.args.owner,publisheddate:new Date(parseInt(s.args.timestamp)*1e3).toLocaleString()}))},GetUnitCompaignsByAddressFuncJS=async(e,n,a)=>{if(!(typeof n!="undefined"&&n))throw"Please provide valid campaign address";const i=new r.providers.JsonRpcBatchProvider(a),o=new r.Contract(e,p.abi,i),c=o.filters.CampaignCreatedEvent();let t=(await o.queryFilter(c)).find(d=>d.args.campignAddress==n);if(!(typeof t!="undefined"&&t))throw"Campaign Not Found!";return{title:t.args.title,campaignaddress:t.args.campignAddress,category:t.args.category,descriptionhash:t.args.descHash,imghash:t.args.imgHash,amountrequired:r.utils.formatEther(t.args.requiredAmount),owner:t.args.owner,publisheddate:new Date(parseInt(t.args.timestamp)*1e3).toLocaleString()}},GetCompaignTransactionsFuncJS=async(e,n)=>{const i=new r.providers.JsonRpcBatchProvider(n).getSigner(),o=new r.Contract(e,m.abi,i),c=o.filters.DonatedEvent();return(await o.queryFilter(c)).map(s=>({amount:r.utils.formatEther(s.args.amount),donar:s.args.donar,timestamp:new Date(parseInt(s.args.timestamp)*1e3).toLocaleString()}))},DonateFuncJS=async(e,n)=>{try{console.log(e,n);const a=new r.providers.Web3Provider(window.ethereum,"any"),i=await a.getNetwork(),o=a.getSigner();await(await new r.Contract(e,m.abi,o).DonateFunc({value:r.utils.parseUnits(n.toString(),"ether")})).wait()}catch(a){throw console.log("Error DonateFuncJS",a),JSON.parse(JSON.stringify(a)).reason}},CreateCampaignFuncJS=async e=>{for(const t in e)if(!(typeof e[t]!="undefined"&&e[t]))throw`${t} is not defined`;const n=new r.providers.Web3Provider(window.ethereum,"any"),a=await n.getNetwork();if(!(a.name=="goerli"&&a.chainId==5))throw"Connect to GoerliETH Network";const i=n.getSigner(),o=new r.Contract(process.env.NEXT_PUBLIC_ADDRESS,p.abi,i),c=r.utils.parseEther(e.requiredAmount),g=await o.CreateCampaignFunc(e.campaignTitle,c,e.imageHash,e.descHash,e.category);console.log("CreateCampaignFuncJS result: ",g)};
